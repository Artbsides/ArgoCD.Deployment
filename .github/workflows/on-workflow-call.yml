name: Reusable Workflows - on-workflow-call  ## To run, call it from another workflow.

on:
  workflow_call:

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.base_ref }}

      - name: Check Environment
        run: |
          if [[ ${{ github.ref_name }} == *-staging ]]; then
            export ENVIRONMENT=staging
          else
            export ENVIRONMENT=production
          fi

          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "==== Deploy to $ENVIRONMENT"

      - name: Get Deployment Image Name and Version
        run: |
          IMAGE=$(cat .k8s/${{ env.ENVIRONMENT }}/deployment.yml | awk "/image:/ {print $2}" | sed "s/.*.://")

          export IMAGE_NAME=$(echo $IMAGE | sed "s/.[0-9].*//i")
          export IMAGE_VERSION=$(echo $IMAGE | sed "s/[a-z_-]*.//i")

          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
          echo "==== Image Name: $IMAGE_NAME"

          echo "IMAGE_VERSION=$IMAGE_VERSION" >> $GITHUB_ENV
          echo "==== Image Version: $IMAGE_VERSION"

      - name: Check Deployment Image Version
        run: |
          if [[ ${{ env.IMAGE_VERSION }} == ${{ github.ref_name }} ]]; then
            echo "==== Ok"
          else
            echo "==== Image version is different from tag."
            exit 1
          fi

      - id: cache
        name: Packages Cache
        uses: actions/cache@v3
        with:
          key: cache-packages-f3854a98-4987-7652-as87-54as87qw458as
          path: |
            /usr/local/bin/argocd
          restore-keys: |
            cache-packages-f3854a98-4987-7652-as87-54as87qw458as

      - name: SetUp Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: rempeloliveira/public:${{ env.IMAGE_NAME }}.${{ github.ref_name }}

      - name: SetUp ArgoCD
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd

          rm argocd-linux-amd64

      - name: Sync ArgoCD Application
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --grpc-web

          argocd app create ${{ env.IMAGE_NAME }}${{ env.ENVIRONMENT == 'staging' && '-staging' || '' }} \
            --repo https://github.com/${{ github.repository }}.git \
            --path .k8s/${{ env.ENVIRONMENT }} \
            --revision ${{ github.ref_name }} \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace ${{ env.ENVIRONMENT }}-apps \
            --server ${{ secrets.ARGOCD_SERVER }} \
            --grpc-web \
            --upsert

          argocd app sync ${{ env.IMAGE_NAME }}${{ env.ENVIRONMENT == 'staging' && '-staging' || '' }} \
            --server ${{ secrets.ARGOCD_SERVER }} \
            --grpc-web
